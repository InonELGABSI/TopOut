CREATE TABLE SessionEntity  (
id TEXT PRIMARY KEY,
userId TEXT ,
title TEXT ,
startTime Integer ,
endTime Integer ,
totalAscent REAL ,
totalDescent REAL ,
maxAltitude REAL ,
minAltitude REAL ,
avgRate REAL ,
alertTriggered INTEGER DEFAULT 0,
createdAt INTEGER DEFAULT (strftime('%s', 'now')),
updatedAt INTEGER DEFAULT (strftime('%s', 'now')),
sessionDeletedOffline INTEGER DEFAULT 0,
sessionCreatedOffline INTEGER DEFAULT 0,
sessionUpdatedOffline INTEGER DEFAULT 0
);

saveSession:
INSERT OR REPLACE INTO SessionEntity(
  id, userId, title, startTime, endTime,
  totalAscent, totalDescent, maxAltitude,
  minAltitude, avgRate, alertTriggered,
  createdAt,updatedAt,sessionDeletedOffline,
  sessionCreatedOffline, sessionUpdatedOffline
) VALUES (?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?);

getSessionById:
SELECT * FROM SessionEntity WHERE id = ?;

getAllSessions:
SELECT * FROM SessionEntity WHERE sessionDeletedOffline = 0;

deleteSession:
DELETE FROM SessionEntity WHERE id = ?;

updateSessionSummary:
UPDATE SessionEntity
SET
  endTime      = ?,
  totalAscent  = ?,
  totalDescent = ?,
  maxAltitude  = ?,
  minAltitude  = ?,
  avgRate      = ?
WHERE id = ?;

markSessionDeletedOffline:
UPDATE SessionEntity
SET sessionDeletedOffline = 1
WHERE id = ?;

markSessionCreatedOffline:
UPDATE SessionEntity
SET sessionCreatedOffline = 1
WHERE id = ?;

updateSessionTitle:
UPDATE SessionEntity
SET
  title = ?,
  sessionUpdatedOffline = ?,
  updatedAt = strftime('%s', 'now')
WHERE id = ?;

getSessionsForSync:
SELECT * FROM SessionEntity WHERE sessionCreatedOffline = 1 OR sessionDeletedOffline = 1 OR sessionUpdatedOffline = 1;

resolveCreatedOfflineSync:
UPDATE SessionEntity
SET sessionCreatedOffline = 0
WHERE id = ?;

resolveDeletedOfflineSync:
DELETE FROM SessionEntity
WHERE id = ? AND sessionDeletedOffline = 1;

resolveUpdatedOfflineSync:
UPDATE SessionEntity
SET sessionUpdatedOffline = 0
WHERE id = ?;

